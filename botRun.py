#coding: utf-8#!usr/bin/python2.7from __future__ import print_functionfrom __future__ import unicode_literalsimport telepotimport timeimport randomfrom code.archive import *from code.poll import *from code.compare import *from code.uptime import upTimefrom code.quote import addquote, readquote, fileLengthfrom telepot.loop import MessageLoopfrom code.treenit import treenitfrom code.idea import  addIdea, listIdeasfrom code.database import createTable, addToDataBase, findQuotefrom code.help import helpbot = telepot.Bot(joukkueBot)response = bot.getUpdates()#print(bot.getMe())#response = bot.getUpdates()# etsitaan uusille filuille id:t#print(response)start_time = time.time()fileLength("quotes.txt")createTable()online = 0def handle(msg):        content_type, chat_type, chat_id = telepot.glance(msg)        print(content_type, chat_type, chat_id)        print(msg)        if content_type == 'new_chat_member':            member = msg['new_chat_participant']['username']            bot.sendMessage(chat_id, 'Tervetuloa norsunluutorniin @' + member + ', voittajien valinta')        if msg['date'] >= start_time:            if content_type == 'text':                value = comparing(msg['text'])                temp = msg['text'].split(" ")[0]                if value.is_tuli() == True:                    rng = random.randint(0,2)                    if(rng == 0):                        bot.sendMessage(chat_id, 'spruit')                    elif(rng ==1):                        bot.sendSticker(chat_id, spruit)                    else:                        bot.sendMessage(chat_id, "tirsk")                if value.is_tissit() == True:                    bot.sendPhoto(chat_id, boobs)                if (msg['text'] == "/uptime" or msg['text'] == "/uptime@JoukkueBot"):                    upTime(chat_id, bot)                if msg['text'].split(" ")[0] == "/pol":                    poll(msg, chat_id, bot)                if temp == "/insertquote":                    addToDataBase(msg, bot, chat_id)                if temp == "/readquote":                    findQuote(msg, chat_id, bot)                if (temp == "/treenit" or temp == "/treenit@JoukkueBot"):                    treenit(chat_id, bot)                if temp == "/addIdea":                    addIdea(chat_id, bot, msg)                if temp == "/listIdeas":                    listIdeas(chat_id, bot)                if msg["text"] == "/help" or msg["text"] == "/help@JoukkueBot":                    help(bot, chat_id)            if content_type == 'voice':                bot.sendMessage(chat_id, 'Lul i have no ears')MessageLoop(bot, handle).run_as_thread()print ('The bot is running')# Keep the program running.while 1:    online = 1    time.sleep(10)    #bot.sendMessage(-1001059712421L, 'Moi, en ees tullu pakottaa')#def handle(msg):#pprint(msg)#MessageLoop(bot, handle).run_forever()##bot.sendMessage(42231217, 'The bot is creepy (:!')